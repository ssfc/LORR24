/*
TODO:
0) В PIBTS при подсчете скора я беру расстояний от новой позиции агента - расстояние от начальной позиции агента
   те 3 шага, что делает агент не смотряться на веса этих ребер, то есть он может пойти вообще не по GG
1) Сделать более умный вес задачи у шедулера. Например: для каждой задачи найти самую ближайшую на ее конце и дать этому некоторый вес
   таким образом он будет не только брать самую близкую задачу, но еще и думать чуток наперед.
2) Улучшить GuidanceMap для warehouse
3) Попробовать пошафлить порядок операций в PIBTS. Можно как сильно пошафлить, так и совсем чуть-чуть: поменять местами соседние
4) Добавить операцию try_rebuild_neighbors, оптимизировать построение соседей. Попробовать в метрике заюзать соседей
5) Сделать адаптивные приоритеты агентам.
6) Сделать GuidanceMap для всех карт
7) Сделать солвер для GuidanceMap. Найти с помощью него очень хороший GM для random
8) Посылка без DHM набирает примерно также (чуть лучше), видимо DHM не так уж и хорош, нужно разобраться
9) Для малого колва агентов попробовать увеличить глубину планирования. Например 4
10) попробовать чистый HM в шедулере.
11) Все же GuidanceMap для warehouse очень плох: 119851	0.818, тогда как без GuidanceMap: 144650 0.987
12) TSWAP статья от Keisuke про назначение агентам задачи.
13) В robot_handler использовать все же расстояние до текущей точки задачи.
14) Адаптивные приоритеты роботам.
15) отправить посылку с отжигом в шедулере
16) SORTATION, CITY, GAME набирает скор больше если шедулер будет смотреть на первую точку
17) включить try_rebuild_neighbors и отправить в тестсистему
*/
